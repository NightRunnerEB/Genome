[toolchain]

[features]
resolution = true
skip-lint = false

[programs.localnet]
genome_solana = "9SK6NkuZHbPHYqL2qpcN5gwpfnjtPLj36mLn6PGfe3R8"

[registry]
url = "https://api.apr.dev"

[provider]
cluster = "Localnet"
wallet = "~/.config/solana/id.json"

[scripts]
test-omni = "yarn run ts-mocha -p ./tsconfig.json -t 1000000 tests/genomeOmni.test.ts --grep 'required'"
test-single = "yarn run ts-mocha -p ./tsconfig.json -t 1000000 tests/genomeSingle.test.ts --grep 'required'"
test-all = "anchor run test-ci && pkill -9 solana-test-validator"
test-ci = "sh run_tests.sh"
initialize-omni = "yarn run ts-node migrations/omnichain/initializeOmnichain.ts keys/deployer.json"
set-bridge-fee = "yarn run ts-node migrations/omnichain/setBridgeFee.ts keys/admin.json"
initialize-single = "yarn run ts-node migrations/singlechain/initializeSinglechain.ts keys/deployer.json 6MurAyX9MiuLV8ufEeAN26w1KTbT1yDKCAcQF1bHQHCx"
setup-wallets = "yarn run ts-node migrations/singlechain/setupWallets.ts 6MurAyX9MiuLV8ufEeAN26w1KTbT1yDKCAcQF1bHQHCx CB39FqtnDdACX9XkwjsA2gYGd7ZfxjveMewhxRoB9c8k"
grant-role = "yarn run ts-node migrations/singlechain/grantRole.ts keys/admin.json"
revoke-role = "yarn run ts-node migrations/singlechain/revokeRole.ts keys/admin.json"
approve-token = "yarn run ts-node migrations/singlechain/approveToken.ts"
ban-token = "yarn run ts-node migrations/singlechain/banToken.ts"
create-tournament = "yarn run ts-node migrations/singlechain/createTournament.ts"

